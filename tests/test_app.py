"""Tests for app.py and cli.py."""
import re
from tempfile import TemporaryDirectory

import pytest

from retag_opus import app


def test_print_version(capsys) -> None:
    """Test printing version."""
    with pytest.raises(SystemExit):
        app.run(["--version"])
    out, _ = capsys.readouterr()  # type: ignore
    assert re.match(r"^retag \(version 0.3.0\)$", out)


def test_print_help(capsys) -> None:
    """Test printing help."""
    with pytest.raises(SystemExit):
        app.run(["--help"])
    out, _ = capsys.readouterr()  # type: ignore
    assert re.match(r"^usage:.*", out)


def test_print_completion_script(capsys) -> None:
    """Test printing completion scripts."""
    with pytest.raises(SystemExit):
        app.run(["--print-completion", "bash"])
    out, _ = capsys.readouterr()  # type: ignore
    assert re.match(r"^# AUTOMATCALLY GENERATED by `shtab`", out)


def test_no_songs_in_directory(capsys) -> None:
    """Test logging warning when no opus files in provided dir."""
    with TemporaryDirectory() as temp_dir:
        exit_code = app.run(["--directory", temp_dir])
    out, _ = capsys.readouterr()  # type: ignore
    assert exit_code == 0
    assert re.match(r"^\x1b\[33mThere appears to be no .opus files in the provided directory /tmp.*", out)


def test_directory_not_found(capsys) -> None:
    """Providing non-existent directory."""
    exit_code = app.run(["--directory", "/this/does/not/exist/"])
    out, _ = capsys.readouterr()  # type: ignore
    assert exit_code == 1
    assert re.match(r"^\x1b\[31m/this/does/not/exist/ is not a directory!\n", out)
